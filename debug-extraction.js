const extractor = require('./server/services/InstagramExtractor');

async function debugExtraction() {
  console.log('üîç Debug Instagram extraction...');
  const url = 'https://www.instagram.com/stories/pdfpage_official/3697565265603759740?igsh=MWV4am1wd3JrajM0bA==';
  
  try {
    console.log('üì° Starting extraction...');
    
    // Parse URL first
    const urlInfo = extractor.parseInstagramUrl(url);
    console.log('üìã URL Info:', urlInfo);
    
    if (urlInfo.valid && urlInfo.type === 'story') {
      console.log('‚úÖ Valid story URL detected');
      console.log('üë§ Username:', urlInfo.username);
      console.log('üÜî Story ID:', urlInfo.storyId);
      
      // Test the working story extractor directly
      console.log('\nüî• Testing working story extractor...');
      const result = await extractor.extractInstagramStoryWorking(url);
      
      if (result) {
        console.log('‚úÖ Extraction successful!');
        console.log('üìä Title:', result.title);
        console.log('üìä Type:', result.type);
        console.log('üìä Media Items:', result.mediaItems?.length || 0);
        
        if (result.mediaItems && result.mediaItems.length > 0) {
          result.mediaItems.forEach((item, index) => {
            console.log(`  ${index + 1}. ${item.type} - ${item.downloadable ? 'Downloadable' : 'Not downloadable'}`);
            if (item.url) {
              console.log(`     URL: ${item.url.substring(0, 100)}...`);
            }
          });
        }
      } else {
        console.log('‚ùå Extraction returned null');
      }
    } else {
      console.log('‚ùå Invalid URL or not a story');
    }
    
  } catch (error) {
    console.log('‚ùå Debug extraction failed:', error.message);
    console.log('üìù Stack trace:', error.stack);
  }
}

debugExtraction();
